# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# LogIn
GET         /login/account                              @controllers.UserController.logInWithAccount
GET         /login/facebook/:facebookId                 @controllers.UserController.logInWithFacebook(facebookId)
GET         /user/:userName/salt                        @controllers.UserController.getUserSalt(userName)

# Registro de usuario
POST        /user/account                               @controllers.UserController.registerAccountUser
POST        /user/facebook                              @controllers.UserController.registerFacebookUser

# Usuario
GET         /user/:userId/pets                          @controllers.UserController.getPublishedPets(userId)
GET         /user/:userId/pets/matches                  @controllers.UserController.getPetsMatches(userId)
GET         /user/:userId/search-matches                @controllers.UserController.getPetsMatchingSavedSearches(userId)
GET         /user/:userId/notifications                 @controllers.UserController.getNotifications(userId)
GET         /user/:userId/pending-notifications         @controllers.UserController.userHasPendingNotifications(userId)
PUT         /user/:userId/notifications                 @controllers.UserController.updateLastSeenNotifications(userId)
PUT         /user/:userId/block                         @controllers.UserController.blockUser(userId)
PUT         /user/:userId/unblock                       @controllers.UserController.unblockUser(userId)

# Publicacion de mascota en adopcion
POST        /pet/adoption                               @controllers.PetAdoptionController.publishPet

# Busqueda de mascotas en adopcion
GET         /pets/adoption                              @controllers.PetAdoptionController.searchPets
GET         /pets/last                                  @controllers.PetAdoptionController.getLastPublished

# Adopcion de mascota
GET         /pet/:petId/adopted                         @controllers.PetAdoptionController.userHasAdoptedPet(petId)
POST        /pet/:petId/adoption                        @controllers.PetAdoptionController.adoptPet(petId)
PUT         /pet/:petId/adoption/accepted               @controllers.PetAdoptionController.acceptAdoptionRequest(petId)

# Denuncia de mascota en adopci√≥n
POST        /pet/:petId/report                          @controllers.DenunciationController.reportPublication(petId)
PUT         /pet/:petId/report/accepted                 @controllers.DenunciationController.acceptPublicationReport(petId)
PUT         /pet/:petId/report/rejected                 @controllers.DenunciationController.rejectPublicationReport(petId)

# Tomar mascota en hogar de transito
POST        /pet/:petId/take-in-transit                 @controllers.PetAdoptionController.takePetInTransit(petId)
PUT         /pet/:petId/take-in-transit/accepted        @controllers.PetAdoptionController.acceptTakeInTransitRequest(petId)

# Publicacion de mascota perdida
POST        /pet/lost                                   @controllers.LostPetController.publishPet

# Publicacion de mascota encontrada
POST        /pet/found                                  @controllers.FoundPetController.publishPet

# Mis publicaciones
PUT         /pet/:petId/unpublish                       @controllers.MyPetController.unpublishPet(petId)
PUT         /pet/:petId/found                           @controllers.LostPetController.updateToFound(petId)

# Media
GET         /pet/image/:imageId                         @controllers.ImageController.getPetImage(imageId)
POST        /pet/image                                  @controllers.ImageController.uploadPetImage

# Reportes
GET         /reports                                    @controllers.ReportController.getPetsReport

# Administracion de denuncias
GET         /pets/denunciations                         @controllers.DenunciationController.getPetPublicationDenunciations
GET         /users/denunciations                        @controllers.DenunciationController.getUserDenunciations
